server.port=8762
eureka.client.register-with-eureka=false
#if below value is true then it will try to fetch registry from row 6 uri
eureka.client.fetch-registry=false
eureka.instance.hostname=localhost
eureka.client.serviceUrl.defaultZone=http://localhost:8762/eureka/
eureka.server.enable-self-preservation:false 
#Before talking about self-preservation, let's understand how the Eureka server maintains the client instance registry.
#During the start-up, the clients trigger a REST call with the Eureka server to self-register to the server's instance registry. When a graceful shutdown occurs after use, the clients trigger another REST call so that the server can wipe out all the data related to the caller.
#To handle ungraceful client shutdowns the server expects heartbeats from the client at specific intervals. This is called renewal. If the server stops receiving the heartbeat for a specified duration, then it will start evicting the stale instances.
#The mechanism that stops evicting the instances when the heartbeats are below the expected threshold is called self-preservation. This might happen in the case of a poor network partition, where the instances are still up, but just can't be reached for a moment or in the case of an abrupt client shutdown.
